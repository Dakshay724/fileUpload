{"ast":null,"code":"var _jsxFileName = \"D:\\\\tasks\\\\upload_task\\\\client\\\\src\\\\components\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FilePreview from \"./FilePreview\";\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { uploadFilesToServer } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [filesArray, setFilesArray] = useState([]);\n  const appendFiles = files => {\n    let updatedFilesArray = [...filesArray];\n    for (let file of files) {\n      if (file.type) {\n        file.preview = URL.createObjectURL(file);\n        updatedFilesArray.push(file);\n      }\n    }\n    setFilesArray(updatedFilesArray);\n  };\n  const removeFile = index => {\n    let updatedFilesArray = [...filesArray];\n    updatedFilesArray.splice(index, 1);\n    setFilesArray(updatedFilesArray);\n  };\n  const handleFileUpload = () => {\n    uploadFilesToServer(filesArray, setFilesArray);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropZone__imgs-wrapper\",\n      children: [filesArray.map((file, index) => /*#__PURE__*/_jsxDEV(FilePreview, {\n        file: file,\n        onRemove: () => removeFile(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file__add\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"file\",\n            type: \"file\",\n            className: \"hideFileText\",\n            multiple: true,\n            onChange: e => appendFiles(e.target.files)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFileUpload,\n        className: \"btn btn-primary mt-3\",\n        children: \"Upload Files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"6eOw1C3vGmVUQpyyNG6wCkrn5rk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","FilePreview","uploadFilesToServer","jsxDEV","_jsxDEV","FileUpload","_s","filesArray","setFilesArray","appendFiles","files","updatedFilesArray","file","type","preview","URL","createObjectURL","push","removeFile","index","splice","handleFileUpload","className","children","map","onRemove","fileName","_jsxFileName","lineNumber","columnNumber","id","multiple","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/tasks/upload_task/client/src/components/FileUpload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport FilePreview from \"./FilePreview\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { uploadFilesToServer } from \"../utils/api\";\r\n\r\nconst FileUpload = () => {\r\n  const [filesArray, setFilesArray] = useState([]);\r\n\r\n  const appendFiles = (files) => {\r\n    let updatedFilesArray = [...filesArray];\r\n    for (let file of files) {\r\n      if (file.type) {\r\n        file.preview = URL.createObjectURL(file);\r\n        updatedFilesArray.push(file);\r\n      }\r\n    }\r\n    setFilesArray(updatedFilesArray);\r\n  };\r\n\r\n  const removeFile = (index) => {\r\n    let updatedFilesArray = [...filesArray];\r\n    updatedFilesArray.splice(index, 1);\r\n    setFilesArray(updatedFilesArray);\r\n  };\r\n\r\n  const handleFileUpload = () => {\r\n    uploadFilesToServer(filesArray, setFilesArray);\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-upload-container\">\r\n      <div className=\"dropZone__imgs-wrapper\">\r\n        {filesArray.map((file, index) => (\r\n          <FilePreview\r\n            key={index}\r\n            file={file}\r\n            onRemove={() => removeFile(index)}\r\n          />\r\n        ))}\r\n        <div className=\"file__add\">\r\n          <label>\r\n            {/* <FontAwesomeIcon className=\"file_plus_Icon\" icon={\"faplus\"} /> */}\r\n            <input\r\n              id=\"file\"\r\n              type=\"file\"\r\n              className=\"hideFileText\"\r\n              multiple\r\n              onChange={(e) => appendFiles(e.target.files)}\r\n            />\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <center>\r\n        <button onClick={handleFileUpload} className=\"btn btn-primary mt-3\">\r\n          Upload Files\r\n        </button>\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC;AACA;AACA,SAASC,mBAAmB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,WAAW,GAAIC,KAAK,IAAK;IAC7B,IAAIC,iBAAiB,GAAG,CAAC,GAAGJ,UAAU,CAAC;IACvC,KAAK,IAAIK,IAAI,IAAIF,KAAK,EAAE;MACtB,IAAIE,IAAI,CAACC,IAAI,EAAE;QACbD,IAAI,CAACE,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;QACxCD,iBAAiB,CAACM,IAAI,CAACL,IAAI,CAAC;MAC9B;IACF;IACAJ,aAAa,CAACG,iBAAiB,CAAC;EAClC,CAAC;EAED,MAAMO,UAAU,GAAIC,KAAK,IAAK;IAC5B,IAAIR,iBAAiB,GAAG,CAAC,GAAGJ,UAAU,CAAC;IACvCI,iBAAiB,CAACS,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAClCX,aAAa,CAACG,iBAAiB,CAAC;EAClC,CAAC;EAED,MAAMU,gBAAgB,GAAGA,CAAA,KAAM;IAC7BnB,mBAAmB,CAACK,UAAU,EAAEC,aAAa,CAAC;EAChD,CAAC;EAED,oBACEJ,OAAA;IAAKkB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCnB,OAAA;MAAKkB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,GACpChB,UAAU,CAACiB,GAAG,CAAC,CAACZ,IAAI,EAAEO,KAAK,kBAC1Bf,OAAA,CAACH,WAAW;QAEVW,IAAI,EAAEA,IAAK;QACXa,QAAQ,EAAEA,CAAA,KAAMP,UAAU,CAACC,KAAK;MAAE,GAF7BA,KAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACF,CAAC,eACFzB,OAAA;QAAKkB,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBnB,OAAA;UAAAmB,QAAA,eAEEnB,OAAA;YACE0B,EAAE,EAAC,MAAM;YACTjB,IAAI,EAAC,MAAM;YACXS,SAAS,EAAC,cAAc;YACxBS,QAAQ;YACRC,QAAQ,EAAGC,CAAC,IAAKxB,WAAW,CAACwB,CAAC,CAACC,MAAM,CAACxB,KAAK;UAAE;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNzB,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QAAQ+B,OAAO,EAAEd,gBAAiB;QAACC,SAAS,EAAC,sBAAsB;QAAAC,QAAA,EAAC;MAEpE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvB,EAAA,CAtDID,UAAU;AAAA+B,EAAA,GAAV/B,UAAU;AAwDhB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}