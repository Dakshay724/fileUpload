{"ast":null,"code":"var _jsxFileName = \"D:\\\\tasks\\\\upload_task\\\\client\\\\src\\\\components\\\\FileUpload.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import FilePreview from \"./FilePreview\";\n// // import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// // import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n// import { uploadFilesToServer } from \"../utils/api\";\n\n// const FileUpload = () => {\n//   const [filesArray, setFilesArray] = useState([]);\n\n//   const appendFiles = (files) => {\n//     let updatedFilesArray = [...filesArray];\n//     for (let file of files) {\n//       if (file.type) {\n//         file.preview = URL.createObjectURL(file);\n//         updatedFilesArray.push(file);\n//       }\n//     }\n//     setFilesArray(updatedFilesArray);\n//   };\n\n//   const removeFile = (index) => {\n//     let updatedFilesArray = [...filesArray];\n//     updatedFilesArray.splice(index, 1);\n//     setFilesArray(updatedFilesArray);\n//   };\n\n//   const handleFileUpload = () => {\n//     uploadFilesToServer(filesArray, setFilesArray);\n//   };\n\n//   return (\n//     <div className=\"file-upload-container\">\n//       <div className=\"dropZone__imgs-wrapper\">\n//         {filesArray.map((file, index) => (\n//           <FilePreview\n//             key={index}\n//             file={file}\n//             onRemove={() => removeFile(index)}\n//           />\n//         ))}\n//         <div className=\"file__add\">\n//           <label>\n//             {/* <FontAwesomeIcon className=\"file_plus_Icon\" icon={\"faplus\"} /> */}\n//             <input\n//               id=\"file\"\n//               type=\"file\"\n//               className=\"hideFileText\"\n//               multiple\n//               onChange={(e) => appendFiles(e.target.files)}\n//             />\n//           </label>\n//         </div>\n//       </div>\n//       <button onClick={handleFileUpload} className=\"btn btn-primary mt-3\">\n//         Upload Files\n//       </button>\n//     </div>\n//   );\n// };\n\n// export default FileUpload;\n\nimport React, { useState } from \"react\";\nimport FilePreview from \"./FilePreview\";\nimport { uploadFilesToServer } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [filesArray, setFilesArray] = useState([]);\n  const appendFiles = files => {\n    let updatedFilesArray = [...filesArray];\n    for (let file of files) {\n      if (file.type) {\n        file.preview = URL.createObjectURL(file);\n        file.progress = 0; // Initialize progress for each file\n        updatedFilesArray.push(file);\n      }\n    }\n    setFilesArray(updatedFilesArray);\n  };\n  const removeFile = index => {\n    let updatedFilesArray = [...filesArray];\n    updatedFilesArray.splice(index, 1);\n    setFilesArray(updatedFilesArray);\n  };\n  const handleFileUpload = () => {\n    uploadFilesToServer(filesArray, setFilesArray, updateFileProgress);\n  };\n  const updateFileProgress = (index, progress) => {\n    let updatedFilesArray = [...filesArray];\n    updatedFilesArray[index].progress = progress;\n    setFilesArray(updatedFilesArray);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropZone__imgs-wrapper\",\n      children: [filesArray.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-preview-container\",\n        children: [/*#__PURE__*/_jsxDEV(FilePreview, {\n          file: file,\n          onRemove: () => removeFile(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            role: \"progressbar\",\n            style: {\n              width: `${file.progress}%`\n            },\n            \"aria-valuenow\": file.progress,\n            \"aria-valuemin\": \"0\",\n            \"aria-valuemax\": \"100\",\n            children: [file.progress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file__add\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"file\",\n            type: \"file\",\n            className: \"hideFileText\",\n            multiple: true,\n            onChange: e => appendFiles(e.target.files)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      className: \"btn btn-primary mt-3\",\n      children: \"Upload Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"6eOw1C3vGmVUQpyyNG6wCkrn5rk=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","FilePreview","uploadFilesToServer","jsxDEV","_jsxDEV","FileUpload","_s","filesArray","setFilesArray","appendFiles","files","updatedFilesArray","file","type","preview","URL","createObjectURL","progress","push","removeFile","index","splice","handleFileUpload","updateFileProgress","className","children","map","onRemove","fileName","_jsxFileName","lineNumber","columnNumber","role","style","width","id","multiple","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/tasks/upload_task/client/src/components/FileUpload.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import FilePreview from \"./FilePreview\";\r\n// // import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n// // import { faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\n// import { uploadFilesToServer } from \"../utils/api\";\r\n\r\n// const FileUpload = () => {\r\n//   const [filesArray, setFilesArray] = useState([]);\r\n\r\n//   const appendFiles = (files) => {\r\n//     let updatedFilesArray = [...filesArray];\r\n//     for (let file of files) {\r\n//       if (file.type) {\r\n//         file.preview = URL.createObjectURL(file);\r\n//         updatedFilesArray.push(file);\r\n//       }\r\n//     }\r\n//     setFilesArray(updatedFilesArray);\r\n//   };\r\n\r\n//   const removeFile = (index) => {\r\n//     let updatedFilesArray = [...filesArray];\r\n//     updatedFilesArray.splice(index, 1);\r\n//     setFilesArray(updatedFilesArray);\r\n//   };\r\n\r\n//   const handleFileUpload = () => {\r\n//     uploadFilesToServer(filesArray, setFilesArray);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"file-upload-container\">\r\n//       <div className=\"dropZone__imgs-wrapper\">\r\n//         {filesArray.map((file, index) => (\r\n//           <FilePreview\r\n//             key={index}\r\n//             file={file}\r\n//             onRemove={() => removeFile(index)}\r\n//           />\r\n//         ))}\r\n//         <div className=\"file__add\">\r\n//           <label>\r\n//             {/* <FontAwesomeIcon className=\"file_plus_Icon\" icon={\"faplus\"} /> */}\r\n//             <input\r\n//               id=\"file\"\r\n//               type=\"file\"\r\n//               className=\"hideFileText\"\r\n//               multiple\r\n//               onChange={(e) => appendFiles(e.target.files)}\r\n//             />\r\n//           </label>\r\n//         </div>\r\n//       </div>\r\n//       <button onClick={handleFileUpload} className=\"btn btn-primary mt-3\">\r\n//         Upload Files\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default FileUpload;\r\n\r\nimport React, { useState } from \"react\";\r\nimport FilePreview from \"./FilePreview\";\r\nimport { uploadFilesToServer } from \"../utils/api\";\r\n\r\nconst FileUpload = () => {\r\n  const [filesArray, setFilesArray] = useState([]);\r\n\r\n  const appendFiles = (files) => {\r\n    let updatedFilesArray = [...filesArray];\r\n    for (let file of files) {\r\n      if (file.type) {\r\n        file.preview = URL.createObjectURL(file);\r\n        file.progress = 0; // Initialize progress for each file\r\n        updatedFilesArray.push(file);\r\n      }\r\n    }\r\n    setFilesArray(updatedFilesArray);\r\n  };\r\n\r\n  const removeFile = (index) => {\r\n    let updatedFilesArray = [...filesArray];\r\n    updatedFilesArray.splice(index, 1);\r\n    setFilesArray(updatedFilesArray);\r\n  };\r\n\r\n  const handleFileUpload = () => {\r\n    uploadFilesToServer(filesArray, setFilesArray, updateFileProgress);\r\n  };\r\n\r\n  const updateFileProgress = (index, progress) => {\r\n    let updatedFilesArray = [...filesArray];\r\n    updatedFilesArray[index].progress = progress;\r\n    setFilesArray(updatedFilesArray);\r\n  };\r\n\r\n  return (\r\n    <div className=\"file-upload-container\">\r\n      <div className=\"dropZone__imgs-wrapper\">\r\n        {filesArray.map((file, index) => (\r\n          <div key={index} className=\"file-preview-container\">\r\n            <FilePreview file={file} onRemove={() => removeFile(index)} />\r\n            <div className=\"progress\">\r\n              <div\r\n                className=\"progress-bar\"\r\n                role=\"progressbar\"\r\n                style={{ width: `${file.progress}%` }}\r\n                aria-valuenow={file.progress}\r\n                aria-valuemin=\"0\"\r\n                aria-valuemax=\"100\"\r\n              >\r\n                {file.progress}%\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <div className=\"file__add\">\r\n          <label>\r\n            <input\r\n              id=\"file\"\r\n              type=\"file\"\r\n              className=\"hideFileText\"\r\n              multiple\r\n              onChange={(e) => appendFiles(e.target.files)}\r\n            />\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <button onClick={handleFileUpload} className=\"btn btn-primary mt-3\">\r\n        Upload Files\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,mBAAmB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,WAAW,GAAIC,KAAK,IAAK;IAC7B,IAAIC,iBAAiB,GAAG,CAAC,GAAGJ,UAAU,CAAC;IACvC,KAAK,IAAIK,IAAI,IAAIF,KAAK,EAAE;MACtB,IAAIE,IAAI,CAACC,IAAI,EAAE;QACbD,IAAI,CAACE,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;QACxCA,IAAI,CAACK,QAAQ,GAAG,CAAC,CAAC,CAAC;QACnBN,iBAAiB,CAACO,IAAI,CAACN,IAAI,CAAC;MAC9B;IACF;IACAJ,aAAa,CAACG,iBAAiB,CAAC;EAClC,CAAC;EAED,MAAMQ,UAAU,GAAIC,KAAK,IAAK;IAC5B,IAAIT,iBAAiB,GAAG,CAAC,GAAGJ,UAAU,CAAC;IACvCI,iBAAiB,CAACU,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAClCZ,aAAa,CAACG,iBAAiB,CAAC;EAClC,CAAC;EAED,MAAMW,gBAAgB,GAAGA,CAAA,KAAM;IAC7BpB,mBAAmB,CAACK,UAAU,EAAEC,aAAa,EAAEe,kBAAkB,CAAC;EACpE,CAAC;EAED,MAAMA,kBAAkB,GAAGA,CAACH,KAAK,EAAEH,QAAQ,KAAK;IAC9C,IAAIN,iBAAiB,GAAG,CAAC,GAAGJ,UAAU,CAAC;IACvCI,iBAAiB,CAACS,KAAK,CAAC,CAACH,QAAQ,GAAGA,QAAQ;IAC5CT,aAAa,CAACG,iBAAiB,CAAC;EAClC,CAAC;EAED,oBACEP,OAAA;IAAKoB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCrB,OAAA;MAAKoB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,GACpClB,UAAU,CAACmB,GAAG,CAAC,CAACd,IAAI,EAAEQ,KAAK,kBAC1BhB,OAAA;QAAiBoB,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACjDrB,OAAA,CAACH,WAAW;UAACW,IAAI,EAAEA,IAAK;UAACe,QAAQ,EAAEA,CAAA,KAAMR,UAAU,CAACC,KAAK;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC9D3B,OAAA;UAAKoB,SAAS,EAAC,UAAU;UAAAC,QAAA,eACvBrB,OAAA;YACEoB,SAAS,EAAC,cAAc;YACxBQ,IAAI,EAAC,aAAa;YAClBC,KAAK,EAAE;cAAEC,KAAK,EAAE,GAAGtB,IAAI,CAACK,QAAQ;YAAI,CAAE;YACtC,iBAAeL,IAAI,CAACK,QAAS;YAC7B,iBAAc,GAAG;YACjB,iBAAc,KAAK;YAAAQ,QAAA,GAElBb,IAAI,CAACK,QAAQ,EAAC,GACjB;UAAA;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAbEX,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcV,CACN,CAAC,eACF3B,OAAA;QAAKoB,SAAS,EAAC,WAAW;QAAAC,QAAA,eACxBrB,OAAA;UAAAqB,QAAA,eACErB,OAAA;YACE+B,EAAE,EAAC,MAAM;YACTtB,IAAI,EAAC,MAAM;YACXW,SAAS,EAAC,cAAc;YACxBY,QAAQ;YACRC,QAAQ,EAAGC,CAAC,IAAK7B,WAAW,CAAC6B,CAAC,CAACC,MAAM,CAAC7B,KAAK;UAAE;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN3B,OAAA;MAAQoC,OAAO,EAAElB,gBAAiB;MAACE,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAAC;IAEpE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACzB,EAAA,CApEID,UAAU;AAAAoC,EAAA,GAAVpC,UAAU;AAsEhB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}